{"version":3,"file":"static/js/809.8cbfc7d7.chunk.js","mappings":"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","sources":["utils/task-queue/TaskQueue.ts","objects/colliders/types.ts","objects/colliders/collider.worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["type Task = () => Promise<void>;\r\n\r\nexport class TaskQueue {\r\n  private queue: Task[] = [];\r\n  private isProcessing = false;\r\n\r\n  public addTask(task: Task) {\r\n    this.queue.push(task);\r\n    this.processQueue();\r\n  }\r\n\r\n  private async processQueue() {\r\n    if (this.isProcessing) return;\r\n    this.isProcessing = true;\r\n\r\n    while (this.queue.length > 0) {\r\n      const task = this.queue.shift()!;\r\n      await task();\r\n    }\r\n\r\n    this.isProcessing = false;\r\n  }\r\n}\r\n","export enum COLLIDER_TYPE {\r\n  CAPSULE = \"capsule\",\r\n  SPHERE = \"sphere\",\r\n  BOX = \"box\",\r\n  CONVEX = \"convex\",\r\n  TRIMESH = \"trimesh\",\r\n}\r\n\r\nexport interface CapsuleColliderParams {\r\n  geometry: any;\r\n  position: THREE.Vector3Tuple;\r\n  scale: THREE.Vector3Tuple;\r\n  rotation: THREE.Vector3Tuple;\r\n}\r\n\r\nexport interface SphereColliderParams {\r\n  geometry: any;\r\n  position: THREE.Vector3Tuple;\r\n  scale: THREE.Vector3Tuple;\r\n  rotation: THREE.Vector3Tuple;\r\n}\r\n\r\nexport interface BoxColliderParams {\r\n  geometry: any;\r\n  position: THREE.Vector3Tuple;\r\n  scale: THREE.Vector3Tuple;\r\n  rotation: THREE.Vector3Tuple;\r\n}\r\n\r\nexport interface TrimeshColliderParams {\r\n  positions: number[];\r\n  index: number[] | null;\r\n  position: THREE.Vector3Tuple;\r\n  rotation: THREE.Vector3Tuple;\r\n  scale: THREE.Vector3Tuple;\r\n}\r\n\r\nexport interface CapsuleColliderProps {\r\n  radius: number;\r\n  height: number;\r\n  position: THREE.Vector3Tuple;\r\n  rotation: THREE.Vector3Tuple;\r\n}\r\n\r\nexport interface SphereColliderProps {\r\n  radius: number;\r\n  position: THREE.Vector3Tuple;\r\n}\r\n\r\nexport interface BoxColliderProps {\r\n  size: THREE.Vector3Tuple;\r\n  position: THREE.Vector3Tuple;\r\n  rotation: THREE.Vector3Tuple;\r\n}\r\n\r\nexport interface TrimeshColliderProps {\r\n  vertices: number[];\r\n  indices: number[];\r\n  position: THREE.Vector3Tuple;\r\n  rotation: THREE.Vector3Tuple;\r\n}\r\n","import * as THREE from \"three\";\nimport { TaskQueue } from \"../../utils/task-queue/TaskQueue\";\nimport {\n  BoxColliderParams,\n  BoxColliderProps,\n  CapsuleColliderParams,\n  CapsuleColliderProps,\n  COLLIDER_TYPE,\n  SphereColliderParams,\n  SphereColliderProps,\n  TrimeshColliderParams,\n  TrimeshColliderProps,\n} from \"./types\";\n\ninterface MessageData {\n  type: COLLIDER_TYPE;\n  params: CapsuleColliderParams | SphereColliderParams | BoxColliderParams | TrimeshColliderParams;\n}\n\nconst taskQueue = new TaskQueue();\n\nself.onmessage = function (event: MessageEvent<MessageData>) {\n  taskQueue.addTask(() => handleTask(event.data));\n};\n\nasync function handleTask(task: MessageData) {\n  const { type, params } = task;\n\n  if (type === COLLIDER_TYPE.CAPSULE) {\n    const { geometry, scale, position, rotation } = params as CapsuleColliderParams;\n\n    const boundingBox = new THREE.Box3();\n    const boundingSphere = new THREE.Sphere();\n    const bufferGeometry = new THREE.BufferGeometryLoader().parse(geometry);\n\n    bufferGeometry.computeBoundingBox();\n    boundingBox.copy(bufferGeometry.boundingBox!);\n\n    bufferGeometry.computeBoundingSphere();\n    boundingSphere.copy(bufferGeometry.boundingSphere!);\n\n    const meshScale = new THREE.Vector3(scale[0], scale[1], scale[2]);\n    const size = new THREE.Vector3();\n    boundingBox.getSize(size);\n    size.multiply(meshScale);\n\n    const radius = boundingSphere.radius * Math.max(meshScale.x, meshScale.y, meshScale.z);\n    const height = Math.abs(size.y - 2 * radius);\n\n    const center = new THREE.Vector3();\n    boundingBox.getCenter(center).multiply(meshScale);\n\n    const rotationMatrix = new THREE.Matrix4().makeRotationFromEuler(\n      new THREE.Euler(rotation[0], rotation[1], rotation[2])\n    );\n    center.applyMatrix4(rotationMatrix);\n\n    center.add(new THREE.Vector3(position[0], position[1], position[2]));\n\n    const colliderData: CapsuleColliderProps = {\n      radius,\n      height,\n      position: [center.x, center.y, center.z],\n      rotation: [rotation[0], rotation[1], rotation[2]],\n    };\n\n    self.postMessage(colliderData);\n  }\n\n  if (type === COLLIDER_TYPE.SPHERE) {\n    const { geometry, scale, position, rotation } = params as SphereColliderParams;\n\n    const bufferGeometry = new THREE.BufferGeometryLoader().parse(geometry);\n    let boundingSphere = new THREE.Sphere();\n\n    const positionAttribute = bufferGeometry.attributes.position;\n\n    if (positionAttribute instanceof THREE.InterleavedBufferAttribute) {\n      const tempArray: number[] = [];\n      for (let i = 0; i < positionAttribute.count; i++) {\n        tempArray.push(positionAttribute.getX(i), positionAttribute.getY(i), positionAttribute.getZ(i));\n      }\n      const bufferAttribute = new THREE.BufferAttribute(new Float32Array(tempArray), 3);\n      bufferGeometry.setAttribute(\"position\", bufferAttribute);\n    }\n\n    bufferGeometry.computeBoundingSphere();\n    boundingSphere.copy(bufferGeometry.boundingSphere!);\n\n    const meshScale = new THREE.Vector3(scale[0], scale[1], scale[2]);\n    const radius = boundingSphere.radius * Math.max(meshScale.x, meshScale.y, meshScale.z);\n\n    const center = boundingSphere.center.clone();\n    center.multiply(meshScale);\n\n    const rotationMatrix = new THREE.Matrix4().makeRotationFromEuler(\n      new THREE.Euler(rotation[0], rotation[1], rotation[2])\n    );\n    center.applyMatrix4(rotationMatrix);\n\n    center.add(new THREE.Vector3(position[0], position[1], position[2]));\n\n    const colliderData: SphereColliderProps = {\n      radius,\n      position: [center.x, center.y, center.z],\n    };\n\n    self.postMessage(colliderData);\n  }\n\n  if (type === COLLIDER_TYPE.BOX) {\n    const { geometry, scale, position, rotation } = params as BoxColliderParams;\n\n    const bufferGeometry = new THREE.BufferGeometryLoader().parse(geometry);\n    let boundingBox = new THREE.Box3();\n\n    const positionAttribute = bufferGeometry.attributes.position;\n\n    if (positionAttribute instanceof THREE.InterleavedBufferAttribute) {\n      const tempArray: number[] = [];\n      for (let i = 0; i < positionAttribute.count; i++) {\n        tempArray.push(positionAttribute.getX(i), positionAttribute.getY(i), positionAttribute.getZ(i));\n      }\n      const bufferAttribute = new THREE.BufferAttribute(new Float32Array(tempArray), 3);\n      boundingBox = new THREE.Box3().setFromBufferAttribute(bufferAttribute);\n    } else {\n      boundingBox = new THREE.Box3().setFromBufferAttribute(positionAttribute);\n    }\n\n    const meshScale = new THREE.Vector3(scale[0], scale[1], scale[2]);\n\n    const size = new THREE.Vector3();\n    boundingBox.getSize(size).multiply(meshScale);\n\n    const center = new THREE.Vector3();\n    boundingBox.getCenter(center).multiply(meshScale);\n\n    const rotationMatrix = new THREE.Matrix4().makeRotationFromEuler(\n      new THREE.Euler(rotation[0], rotation[1], rotation[2])\n    );\n    center.applyMatrix4(rotationMatrix);\n\n    center.add(new THREE.Vector3(position[0], position[1], position[2]));\n\n    //TODO maybe rotation could be better. Currently it only matches rotation.y\n\n    const colliderData: BoxColliderProps = {\n      size: [size.x, size.y, size.z],\n      position: [center.x, center.y, center.z],\n      rotation: [rotation[0], rotation[1], rotation[2]],\n    };\n\n    self.postMessage(colliderData);\n  }\n\n  if (type === COLLIDER_TYPE.TRIMESH) {\n    const { positions, index, position, rotation, scale } = params as TrimeshColliderParams;\n\n    const vertices: number[] = [];\n    const indices: number[] = [];\n\n    const scaleMatrix = new THREE.Matrix4().makeScale(scale[0], scale[1], scale[2]);\n\n    for (let i = 0; i < positions.length; i += 3) {\n      const vertex = new THREE.Vector3(positions[i], positions[i + 1], positions[i + 2]);\n      vertex.applyMatrix4(scaleMatrix);\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    if (index) {\n      for (let i = 0; i < index.length; i += 3) {\n        indices.push(index[i], index[i + 1], index[i + 2]);\n      }\n    } else {\n      for (let i = 0; i < vertices.length / 3; i += 3) {\n        indices.push(i, i + 1, i + 2);\n      }\n    }\n\n    const colliderData: TrimeshColliderProps = {\n      vertices,\n      indices,\n      position: [position[0], position[1], position[2]],\n      rotation: [rotation[0], rotation[1], rotation[2]],\n    };\n\n    self.postMessage(colliderData);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [456,408], function() { return __webpack_require__(6809); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"408\":\"719ce7d4\",\"456\":\"2f6077d1\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t809: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkdotcomma\"] = self[\"webpackChunkdotcomma\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([\n\t\t__webpack_require__.e(456),\n\t\t__webpack_require__.e(408)\n\t]).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["TaskQueue","_classCallCheck","queue","isProcessing","_createClass","key","value","task","this","push","processQueue","_processQueue","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","length","shift","stop","apply","arguments","COLLIDER_TYPE","taskQueue","_handleTask","type","params","_ref","geometry","scale","position","rotation","boundingBox","boundingSphere","bufferGeometry","meshScale","size","radius","height","center","rotationMatrix","colliderData","_ref2","_geometry","_scale","_position","_rotation","_bufferGeometry","_boundingSphere","positionAttribute","tempArray","i","bufferAttribute","_meshScale","_radius","_center","_rotationMatrix","_colliderData","_ref3","_geometry2","_scale2","_position2","_rotation2","_bufferGeometry2","_boundingBox","_positionAttribute","_tempArray","_i","_bufferAttribute","_meshScale2","_size","_center2","_rotationMatrix2","_colliderData2","_ref4","positions","index","_position3","_rotation3","_scale3","vertices","indices","scaleMatrix","_i2","vertex","_i3","_i4","_colliderData3","CAPSULE","THREE","parse","computeBoundingBox","copy","computeBoundingSphere","getSize","multiply","Math","max","x","y","z","abs","getCenter","makeRotationFromEuler","applyMatrix4","add","self","postMessage","SPHERE","attributes","count","getX","getY","getZ","Float32Array","setAttribute","clone","BOX","setFromBufferAttribute","TRIMESH","makeScale","onmessage","event","addTask","_x","handleTask","data","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"sourceRoot":""}